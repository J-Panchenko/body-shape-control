{"version":3,"sources":["data/activities.js","data/nutrient-ratio.js","data/texts.js","components/error-indicator/error-indicator.png","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","components/app-header/app-header.js","components/app-header/index.js","components/layout/index.js","components/layout/layout.js","constants/user.js","constants/water.js","constants/action-type.js","constants/energy-value-of-nutrients.js","actions/meals.js","components/pages/calorie-calculator/activity/activity-item/activity-item.js","components/pages/calorie-calculator/activity/activity-item/index.js","components/pages/calorie-calculator/activity/activity.js","components/pages/calorie-calculator/activity/index.js","components/pages/calorie-calculator/age/index.js","components/pages/calorie-calculator/age/age.js","components/pages/calorie-calculator/gender/gender.js","components/pages/calorie-calculator/gender/index.js","components/pages/calorie-calculator/height/height.js","components/pages/calorie-calculator/height/index.js","components/pages/calorie-calculator/weight/index.js","components/pages/calorie-calculator/weight/weight.js","components/pages/meal-plan/meal-calculator/nutrient-ratio/index.js","components/pages/meal-plan/meal-calculator/nutrient-ratio/nutrient-ratio.js","components/pages/meal-plan/meal-calculator/meal-calculator-result/index.js","components/pages/meal-plan/meal-calculator/meal-calculator-result/meal-calculator-result.js","components/pages/meal-plan/meal-calculator/index.js","components/pages/meal-plan/meal-calculator/meal-calculator.js","components/pages/meal-plan/daily-meal-planner/current-meal-plan/index.js","components/pages/meal-plan/daily-meal-planner/current-meal-plan/current-meal-plan.js","components/service-context/ninjas-service-context.js","components/hoc/index.js","components/hoc/with-ninjas-service.js","models/metabolism-calculator.js","models/change-serving-size.js","models/water-goal-calculators.js","models/sum-of-meals-nutrients.js","images/add.svg","images/change.svg","images/save.svg","images/garbage.svg","images/search.svg","images/heart.svg","components/pages/meal-plan/daily-meal-planner/meals-list/meals-item/search-result/index.js","components/pages/meal-plan/daily-meal-planner/meals-list/meals-item/search-result/search-result.js","components/spinner/index.js","components/spinner/spinner.js","components/pages/meal-plan/daily-meal-planner/meals-list/meals-item/search-panel/search-panel.js","components/pages/meal-plan/daily-meal-planner/meals-list/meals-item/search-panel/index.js","components/pages/meal-plan/daily-meal-planner/meals-list/meals-item/product-item/product-item.js","components/pages/meal-plan/daily-meal-planner/meals-list/meals-item/index.js","components/pages/meal-plan/daily-meal-planner/meals-list/meals-item/meals-item.js","components/pages/meal-plan/daily-meal-planner/meals-list/index.js","components/pages/meal-plan/daily-meal-planner/meals-list/meals-list.js","components/pages/meal-plan/daily-meal-planner/daily-meal-planner.js","components/pages/meal-plan/index.js","components/pages/meal-plan/meal-plan.js","components/pages/calorie-calculator/calculator-result/calculator-result.js","components/pages/calorie-calculator/calculator-result/index.js","actions/user-data.js","components/pages/calorie-calculator/calculator.js","models/calories-calculator-result.js","components/pages/calorie-calculator/index.js","actions/index.js","actions/weight-target.js","components/pages/water-goal/water-goal-result/index.js","components/pages/water-goal/water-goal-result/water-goal-result.js","components/pages/water-goal/water-goal-calculator/index.js","components/pages/water-goal/water-goal-calculator/water-goal-calculator.js","components/pages/water-goal/index.js","components/pages/water-goal/daily-water-goal.js","components/pages/home-page/index.js","components/pages/home-page/home-page.js","components/app/app.js","components/app/index.js","reducers/meals.js","reducers/user-data.js","reducers/weight-target.js","reducers/index.js","store.js","index.js","services/ninjas-service.js"],"names":["activities","id","label","description","value","nutrientRatio","protein","fat","carbohydrates","texts","homePage","introduction","calories","link","text","meals","water","conclusion","caloriesResult","prefaceMealPlan","caloriesGoal","nutrientRatioText","mealPlanner","prefaceWaterGoal","waterGoal","waterGoalResult","mealsName","breakfast","lunch","dinner","snacks","errorMessage","global","empty","greater","less","foodNoSearch","foodNoCorrectly","ErrorIndicator","className","src","icon","alt","ErrorBoundary","props","state","hasError","this","setState","children","Component","AppHeader","to","Layout","user","male","genderName","ageFactor","heightFactor","weightFactor","basicMetabolismFactor","female","targetCalories","forNormalWeightLoss","forExtremeWeightLoss","forNormalWeightGain","forExtremeWeightGain","min","mid","max","literToML","oneGlassML","halfGlassML","halfOfGlass","significantAge","actionType","clearCalorieCalculator","userAge","userWeight","userCalories","maintainWeight","normalWeightLoss","extremeWeightLoss","normalWeightGain","extremeWeightGain","productAddedToBreakfast","productAddedToLunch","productAddedToDinner","productAddedToSnacks","productRemovedFromBreakfast","productRemovedFromLunch","productRemovedFromDinner","productRemovedFromSnacks","usersCurrentSumOfNutrient","energyValue","carb","addProductToBreakfast","newProduct","type","addProductToLunch","addProductToDinner","addProductToSnacks","removeProductFromBreakfast","productId","removeProductFromLunch","removeProductFromDinner","removeProductFromSnacks","calculateSumOfNutrients","ActivityItem","activityValue","onActivityChange","required","name","checked","onChange","htmlFor","Activity","elements","map","item","itemProps","Age","age","step","placeholder","Gender","onGenderChange","Height","onHeightChange","Weight","weight","NutrientRatio","onRatioIdChange","onProteinChange","onFatChange","onCarboChange","error","parseValue","e","parseFloat","target","radioButtons","ratio","MealCalculatorResult","carbo","useEffect","scroller","scrollTo","duration","delay","smooth","proteinGramGoal","Math","round","fatGramGoal","carbsGramGoal","MealCalculator","userKcal","useSelector","userData","useState","setCalories","proteinPercent","setProteinPercent","fatPercent","setFatPercent","carboPercent","setCarboPercent","userProteinPercent","setUserProteinPercent","userFatPercent","setUserFatPercent","userCarboPercent","setUserCarboPercent","ratioId","setRatioId","setError","mealCalculatorResult","setMealCalculatorResult","textBtn","setTextBtn","viewCalculator","setViewCalculator","mealData","onNutrientRatioChange","setNutrientRatio","total","Number","toFixed","isNaN","totalUserRatio","onSubmit","preventDefault","i","length","parseCalories","prot","carbs","onClick","CurrentMealPlan","kcal","currentValues","setCurrentValues","currentSum","React","createContext","NinjasServiceProvider","Provider","NinjasServiceConsumer","Consumer","withNinjasService","mapMethodsToProps","Wrapped","ninjasService","serviceProps","calculateMetabolism","gender","height","activValue","basicMetabolism","ageValue","heightValue","weightValue","changeServingSize","endSize","seekOut","result","getWaterGoalInML","factor","waterMin","ceil","waterMid","waterMax","sumOfMealNutrients","key","meal","reduce","a","b","SearchResult","foodName","proteins","fats","servingSize","addFunction","portion","searchResult","setSearchResult","dispatch","useDispatch","addedProduct","floor","random","endPortion","onChangePortion","imgAdd","width","Spinner","noSearch","noCorrectly","SearchPanel","service","getFood","getResultsOfSearch","productSearch","setProductSearch","food","setFood","setKcal","setProteins","setFats","setCarbs","size","setSize","view","setView","noResult","setNoResult","loading","setLoading","addFood","then","undefined","onFoodAdded","catch","imgSearch","ProductItem","imgRemove","MealsItem","products","removeFunction","viewList","setViewList","viewSearchPanel","setViewSearchPanel","product","prod","itemList","imgChange","imgSave","MealsList","productsBreakfast","productsLunch","productsDinner","productsSnacks","DailyMealPlanner","MealPlan","CalculatorResult","onSelectedCalories","userSelectedCalories","units","element","connect","weightTarget","payload","getUserCalories","initialState","activity","Calculator","event","onCalculatorResult","forMaintainWeight","metabolism","normalLoss","extremeLoss","normalGain","extremeGain","onClearCalculator","onClearData","onAgeChange","onWeightChange","getUserAge","getUserWeight","getMaintainWeight","getNormalWeightLoss","getExtremeWeightLoss","getNormalWeightGain","getExtremeWeightGain","WaterGoalResult","waterML","waterLiters","glasses","WaterGoalCalculator","setAge","setWeight","setFactor","setResult","setWaterGoal","litersOfWater","setLitersOfWater","glassesOfWater","setGlassesofWater","liters","getWaterGoalInLiters","ml","quantityOfGlasses","getGlassesOfWater","DailyWaterGoal","HomePage","imgHeart","App","path","index","deleteProduct","productIndex","findIndex","slice","updateMeals","action","updateUserData","updateWeightTarget","extremelWeightGain","reducer","store","createStore","apiBase","options","method","headers","onParsedString","str","toLowerCase","split","join","getResource","requestedFood","fetch","ok","Error","status","json","res","transformFood","serving_size_g","protein_g","fat_total_g","carbohydrates_total_g","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6995f827.chunk.js","sourcesContent":["const activities = [\n  {\n    id: 0, label: 'Basal Metabolic Rate (BMR)', description: 'The minimum amount of energy required to ensure the normal functioning of the body (excluding physical activity)', value: 1,\n  },\n  {\n    id: 1, label: 'Sedentary', description: 'Sedentary work and no exercise, minimal activity at home', value: 1.2,\n  },\n  {\n    id: 2, label: 'Light', description: 'Irregular exercise 3 times/week, activity at home', value: 1.375,\n  },\n  {\n    id: 3, label: 'Moderate', description: 'Exercise 3-5 times/week or work of average severity', value: 1.4625,\n  },\n  {\n    id: 4, label: 'Active', description: 'Daily exercise or intense exercise 4-5 times/week', value: 1.55,\n  },\n  {\n    id: 5, label: 'Very Active', description: 'Intense exercise 6-7 times/week', value: 1.6375,\n  },\n  {\n    id: 6, label: 'Extra Active', description: 'Very intense exercise daily and physical job', value: 1.9,\n  },\n];\n\nexport default activities;\n","const nutrientRatio = [\n  {\n    id: 0, label: 'Basic diet 30/25/45', protein: 0.3, fat: 0.25, carbohydrates: 0.45, description: 'Allows you to comfortably move towards the goal without harm to your health',\n  },\n  {\n    id: 1, label: 'High protein diet 40/30/30', protein: 0.4, fat: 0.3, carbohydrates: 0.3, description: 'When carbohydrates are severely restricted, the body begins burning its own fat for fuel — a state called ketosis',\n  },\n  {\n    id: 2, label: 'High carbohydrate diet 25/20/55', protein: 0.25, fat: 0.2, carbohydrates: 0.55, description: 'Suitable for weight gain and high intensity training',\n  },\n];\n\nexport default nutrientRatio;\n","const texts = {\n  homePage: {\n    introduction: 'Counting calories all the time is not necessary, but in the beginning, it may help to determine how many calories are in the foods and drinks you consume regularly.',\n    calories: {\n      link: 'See Calorie Calculator',\n      text: ' to determine how many calories a day you need to various weight goals based on your age, sex, height, weight, and physical activity level. Then click on the \"Calculate\" to see recommended daily amounts calories.',\n    },\n    meals: {\n      link: 'See Daily Meal Plan',\n      text: ' to learn how many calories you are taking in, write down the foods you eat and the beverages you drink. Be sure to use the calculator to determine the nutrient ratio for your goals. Focus on its results when you make up your daily diet.',\n    },\n    water: {\n      text: 'Lastly, don\\'t forget about the water balance. Find out how much fluid you need! ',\n      link: 'See Water Goal Calculator.',\n    },\n    conclusion: 'Made with love...',\n  },\n  caloriesResult: [\n    'Your choice: ',\n    'Select one of these options to use this number of calories in the Daily Meal Calculator on',\n    ' the next page.',\n  ],\n  prefaceMealPlan: [\n    'Tracking your food and drink intake can help you become more aware of your eating habits. It help you build healthy habits and reach your weight goals.',\n    'We recommend using our Daily Meal Calculator to find out how much to eat per day! Or you can just use the Meal Planner if you know your protein, fat and carbs ratios. Let\\'s start!',\n  ],\n  caloriesGoal: 'How many calories do you plan to consume per day?',\n  nutrientRatioText: [\n    'What ratio of protein, fat and carbohydrates in the diet do you prefer?',\n    '(protein/fat/carbs % of calories)',\n    'Use your own nutrient ratio (total - 100%) Percent of:',\n  ],\n  mealPlanner: [\n    'Your Corrent Meal Plan',\n    'What are you going to eat?',\n  ],\n  prefaceWaterGoal: [\n    'The body constantly loses water throughout the day, mostly through urine and sweat but also from regular body functions like breathing. To prevent dehydration, you need to get plenty of water from drink and food every day.',\n    'Use this Water Goal Calculator to learn how much water you should drink daily based on your age, weight and other factors.',\n  ],\n  waterGoal: [\n    'Factors affecting the daily need for water:',\n    'exercising, hiking, physical job (anything that makes your heart rate increase), pregnancy and breast-feeding, diabetes, warm or hot climate',\n    'I usually have one or more factors during the day.',\n  ],\n  waterGoalResult: [\n    'It is recommended that you drink: ',\n    ' milliliters of water per day.',\n    'liters',\n    '(1000ml)',\n    'glassful',\n    '(250ml)',\n  ],\n  mealsName: {\n    breakfast: 'Breakfast',\n    lunch: 'Lunch',\n    dinner: 'Dinner',\n    snacks: 'Snacks',\n  },\n  errorMessage: {\n    global: [\n      'Oops!',\n      'Something went wrong!',\n    ],\n    empty: '* Enter a value in the empty field, please.',\n    greater: '* The sum of the entered values is greater than 100%. Fix it!',\n    less: '* The sum of the entered values is less than 100%. Fix it!',\n    foodNoSearch: '* Nothing found. Try another name, please!',\n    foodNoCorrectly: '* Nothing found. Try to search in English, please!',\n\n  },\n};\n\nexport default texts;\n","export default __webpack_public_path__ + \"static/media/error-indicator.f83b3b33.png\";","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport { texts } from '../../data';\nimport './error-indicator.css';\nimport icon from './error-indicator.png';\n\nconst ErrorIndicator = () => ((\n  <div className=\"error-indicator\">\n    <img src={icon} alt=\"error icon\" />\n    <p className=\"error-message\">\n      <span className=\"boom\">{texts.errorMessage.global[0]}</span>\n      <span>{texts.errorMessage.global[1]}</span>\n    </p>\n  </div>\n));\n\nexport default ErrorIndicator;\n","import ErrorBoundary from './error-boundary';\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    const { children } = this.props;\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return children;\n  }\n}\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nimport './app-header.css';\n\nfunction AppHeader() {\n  return (\n    <nav className=\"menu container\">\n      <Link to=\"/\" className=\"menu__link-home\">Body Shape Control</Link>\n      <ul className=\"menu__list\">\n        <li className=\"menu__item\"><NavLink to=\"calorie-calculator\" className=\"menu__link\">Calorie calculator</NavLink></li>\n        <li className=\"menu__item\"><NavLink to=\"meal-plan\" className=\"menu__link\">Daily meal plan</NavLink></li>\n        <li className=\"menu__item\"><NavLink to=\"water-goal\" className=\"menu__link\">Daily water goal</NavLink></li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default AppHeader;\n","import AppHeader from './app-header';\n\nexport default AppHeader;\n","import Layout from './layout';\n\nexport default Layout;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport AppHeader from '../app-header';\n\nconst Layout = () => (\n  <>\n    <header className=\"header\">\n      <AppHeader />\n    </header>\n    <main>\n      <Outlet />\n    </main>\n  </>\n);\n\nexport default Layout;\n","const user = {\n  male: {\n    genderName: 'male',\n    ageFactor: 6.775,\n    heightFactor: 5.003,\n    weightFactor: 13.75,\n    basicMetabolismFactor: 66.5,\n\n  },\n  female: {\n    genderName: 'female',\n    ageFactor: 4.676,\n    heightFactor: 1.85,\n    weightFactor: 9.563,\n    basicMetabolismFactor: 655.1,\n  },\n  targetCalories: {\n    forNormalWeightLoss: 0.85,\n    forExtremeWeightLoss: 0.77,\n    forNormalWeightGain: 1.15,\n    forExtremeWeightGain: 1.25,\n  },\n};\n\nexport default user;\n","const water = {\n  min: 30,\n  mid: 35,\n  max: 40,\n  literToML: 1000,\n  oneGlassML: 250,\n  halfGlassML: 125,\n  halfOfGlass: 0.5,\n  significantAge: 50,\n};\n\nexport default water;\n","const actionType = {\n  clearCalorieCalculator: 'CLEAR_CALORIE_CALCULATOR',\n  userAge: 'USER_AGE_SUCCESS',\n  userWeight: 'USER_WEIGHT_SUCCESS',\n  userCalories: 'USER_CALORIES_SELECTED',\n  maintainWeight: 'MAINTAIN_WEIGHT_SUCCESS',\n  normalWeightLoss: 'NORMAL_WEIGHT_LOSS',\n  extremeWeightLoss: 'EXTREME_WEIGHT_LOSS',\n  normalWeightGain: 'NORMAL_WEIGHT_GAIN',\n  extremeWeightGain: 'EXTREME_WEIGHT_GAIN',\n  productAddedToBreakfast: 'PRODUCT_ADDED_TO_BREAKFAST',\n  productAddedToLunch: 'PRODUCT_ADDED_TO_LUNCH',\n  productAddedToDinner: 'PRODUCT_ADDED_TO_DINNER',\n  productAddedToSnacks: 'PRODUCT_ADDED_TO_SNACKS',\n  productRemovedFromBreakfast: 'PRODUCT_REMOVED_FROM_BREAKFAST',\n  productRemovedFromLunch: 'PRODUCT_REMOVED_FROM_LUNCH',\n  productRemovedFromDinner: 'PRODUCT_REMOVED_FROM_DINNER',\n  productRemovedFromSnacks: 'PRODUCT_REMOVED_FROM_SNACKS',\n  usersCurrentSumOfNutrient: 'USERS_CURRENT_SUM_OF_NUTRIENTS_SUCCESS',\n};\n\nexport default actionType;\n","const energyValue = {\n  protein: 4,\n  carb: 4,\n  fat: 9,\n};\n\nexport default energyValue;\n","import { actionType } from '../constants';\n\nconst addProductToBreakfast = (newProduct) => ({\n  type: actionType.productAddedToBreakfast,\n  newProduct,\n});\n\nconst addProductToLunch = (newProduct) => ({\n  type: actionType.productAddedToLunch,\n  newProduct,\n});\n\nconst addProductToDinner = (newProduct) => ({\n  type: actionType.productAddedToDinner,\n  newProduct,\n});\n\nconst addProductToSnacks = (newProduct) => ({\n  type: actionType.productAddedToSnacks,\n  newProduct,\n});\n\nconst removeProductFromBreakfast = (productId) => ({\n  type: actionType.productRemovedFromBreakfast,\n  productId,\n});\n\nconst removeProductFromLunch = (productId) => ({\n  type: actionType.productRemovedFromLunch,\n  productId,\n});\n\nconst removeProductFromDinner = (productId) => ({\n  type: actionType.productRemovedFromDinner,\n  productId,\n});\n\nconst removeProductFromSnacks = (productId) => ({\n  type: actionType.productRemovedFromSnacks,\n  productId,\n});\n\nconst calculateSumOfNutrients = () => ({\n  type: actionType.usersCurrentSumOfNutrient,\n});\n\nexport {\n  addProductToBreakfast,\n  addProductToLunch,\n  addProductToDinner,\n  addProductToSnacks,\n  removeProductFromBreakfast,\n  removeProductFromLunch,\n  removeProductFromDinner,\n  removeProductFromSnacks,\n  calculateSumOfNutrients,\n};\n","import React from 'react';\nimport './activity-item.css';\n\nfunction ActivityItem({\n  id, label, description, value, activityValue, onActivityChange,\n}) {\n  return (\n    <span className=\"activity-list__item\">\n      <input\n        type=\"radio\"\n        required\n        name=\"activity\"\n        id={id}\n        value={value}\n        checked={value === activityValue}\n        onChange={onActivityChange}\n      />\n      <label htmlFor={id}>{label}</label>\n      <p>{description}</p>\n    </span>\n  );\n}\n\nexport default ActivityItem;\n","import ActivityItem from './activity-item';\n\nexport default ActivityItem;\n","import React from 'react';\nimport ActivityItem from './activity-item';\n\nimport './activity.css';\n\nfunction Activity({ activities, activityValue, onActivityChange }) {\n  const elements = activities.map((item) => {\n    const { ...itemProps } = item;\n    const { id } = item;\n\n    return (\n      <li key={id}>\n        <ActivityItem\n          {...itemProps}\n          activityValue={activityValue}\n          onActivityChange={onActivityChange}\n        />\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"activity\">\n      <h2 className=\"parameter-subtitle\">Physical Activity</h2>\n      <ul className=\"activity-list\">\n        {elements}\n      </ul>\n    </div>\n  );\n}\n\nexport default Activity;\n","import Activity from './activity';\n\nexport default Activity;\n","import Age from './age';\n\nexport default Age;\n","import React from 'react';\nimport './age.css';\n\nconst Age = ({ age, onChange }) => (\n  <label htmlFor=\"age\" className=\"parameter__item\">\n    <h2 className=\"parameter-subtitle\">Age</h2>\n    <span>years</span>\n    <input\n      type=\"number\"\n      className=\"input\"\n      required\n      id=\"age\"\n      min={15}\n      max={100}\n      step={1}\n      value={age}\n      placeholder=\"0\"\n      onChange={onChange}\n    />\n  </label>\n);\n\nexport default Age;\n","import React from 'react';\n\nimport './gender.css';\nimport user from '../../../../constants/user';\n\nfunction Gender({ value, onGenderChange }) {\n  return (\n    <div className=\"gender\">\n      <h2 className=\"parameter-subtitle\">Gender</h2>\n      <div className=\"gender-buttons\">\n        <div className=\"gender__button\">\n          <label htmlFor=\"male-field\">\n            <input\n              type=\"radio\"\n              required\n              name=\"gender\"\n              checked={value === user.male.genderName}\n              value={user.male.genderName}\n              id=\"male-field\"\n              onChange={onGenderChange}\n            />\n            <span>Male</span>\n          </label>\n        </div>\n        <div className=\"gender__button\">\n          <label htmlFor=\"female-field\">\n            <input\n              type=\"radio\"\n              required\n              name=\"gender\"\n              checked={value === user.female.genderName}\n              value={user.female.genderName}\n              id=\"female-field\"\n              onChange={onGenderChange}\n            />\n            <span>Female</span>\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Gender;\n","import Gender from './gender';\n\nexport default Gender;\n","import React from 'react';\n\nimport './height.css';\n\nfunction Height({ value, onHeightChange }) {\n  return (\n    <label htmlFor=\"height\" className=\"parameter__item\">\n      <h2 className=\"parameter-subtitle\">Height</h2>\n      <span>cm</span>\n      <input\n        type=\"number\"\n        className=\"input\"\n        required\n        id=\"height\"\n        min={60}\n        max={260}\n        step={0.1}\n        value={value}\n        placeholder=\"0\"\n        onChange={onHeightChange}\n      />\n    </label>\n  );\n}\n\nexport default Height;\n","import Height from './height';\n\nexport default Height;\n","import Weight from './weight';\n\nexport default Weight;\n","import React from 'react';\nimport './weight.css';\n\nconst Weight = ({ weight, onChange }) => (\n  <label htmlFor=\"weight\" className=\"parameter__item\">\n    <h2 className=\"parameter-subtitle\">Weight</h2>\n    <span>kg</span>\n    <input\n      type=\"number\"\n      className=\"input\"\n      required\n      id=\"weight\"\n      min={20}\n      max={500}\n      step={0.1}\n      value={weight}\n      placeholder=\"0\"\n      onChange={onChange}\n    />\n  </label>\n);\n\nexport default Weight;\n","import NutrientRatio from './nutrient-ratio';\n\nexport default NutrientRatio;\n","// /* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { nutrientRatio as ratio, texts } from '../../../../../data';\nimport './nutrient-ratio.css';\n\nconst NutrientRatio = ({\n  onRatioIdChange, onProteinChange, onFatChange, onCarboChange, error,\n}) => {\n  const handleInputId = 3;\n\n  const parseValue = (e) => {\n    const number = parseFloat(e.target.value);\n    return number / 100;\n  };\n\n  const radioButtons = ratio.map((item) => {\n    const {\n      id, label, description, protein, fat, carbohydrates,\n    } = item;\n\n    return (\n      <li className=\"nutrient-ratio__item\" key={id}>\n        <input\n          type=\"radio\"\n          required\n          name=\"nutrient-ratio\"\n          id={id}\n          onChange={\n            () => onRatioIdChange(id, protein, fat, carbohydrates)\n          }\n        />\n        <label htmlFor={id}>{label}</label>\n        <p>{description}</p>\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"nutrient-ratio__list\">\n      {radioButtons}\n      <li className=\"nutrient-ratio__item-hundle\" key={handleInputId}>\n        <input\n          type=\"radio\"\n          required\n          name=\"nutrient-ratio\"\n          id={handleInputId}\n          className=\"hundle-input\"\n          onChange={() => onRatioIdChange(handleInputId)}\n        />\n        <label htmlFor={handleInputId} className=\"nutrient-ratio__item-hundle-label\">\n          <p>{texts.nutrientRatioText[2]}</p>\n        </label>\n        <div className=\"nutrient-ratio__hundle\">\n          <label htmlFor=\"protein-percent\" className=\"nutrient-ratio__option\">\n            <input\n              type=\"number\"\n              id=\"protein-percent\"\n              className=\"input\"\n              placeholder=\"protein\"\n              min={0}\n              max={100}\n              step={1}\n              onChange={(e) => onProteinChange(parseValue(e))}\n            />\n            <span>Protein, %</span>\n          </label>\n          <label htmlFor=\"fat-percent\" className=\"nutrient-ratio__option\">\n            <input\n              type=\"number\"\n              id=\"fat-percent\"\n              className=\"input\"\n              placeholder=\"fat\"\n              min={0}\n              max={100}\n              step={1}\n              onChange={(e) => onFatChange(parseValue(e))}\n            />\n            <span>Fat, %</span>\n          </label>\n          <label htmlFor=\"carbo-percent\" className=\"nutrient-ratio__option\">\n            <input\n              type=\"number\"\n              id=\"carbo-percent\"\n              className=\"input\"\n              placeholder=\"carbs\"\n              min={0}\n              max={100}\n              step={1}\n              onChange={(e) => onCarboChange(parseValue(e))}\n            />\n            <span>Carbs, %</span>\n          </label>\n        </div>\n        <div className=\"nutrient-ratio__hundle-error\">{(error === '') ? null : error}</div>\n      </li>\n    </ul>\n  );\n};\n\nexport default NutrientRatio;\n","import MealCalculatorResult from './meal-calculator-result';\n\nexport default MealCalculatorResult;\n","import React, { useEffect } from 'react';\nimport { scroller } from 'react-scroll';\nimport { energyValue } from '../../../../../constants';\nimport './meal-calculator-result.css';\n\nconst MealCalculatorResult = ({ ...props }) => {\n  const {\n    calories, protein, fat, carbo,\n  } = props;\n\n  useEffect(() => {\n    scroller.scrollTo('table', {\n      duration: 800,\n      delay: 0,\n      smooth: 'easeInOutQuart',\n    });\n  }, [protein, fat, carbo]);\n\n  const proteinGramGoal = Math.round((calories * protein) / energyValue.protein);\n  const fatGramGoal = Math.round((calories * fat) / energyValue.fat);\n  const carbsGramGoal = Math.round((calories * carbo) / energyValue.carb);\n\n  return (\n    <table className=\"table\">\n      <caption className=\"table-cap\">Your Daily Meal Goal</caption>\n      <tbody className=\"table-body\">\n        <tr className=\"table-row\">\n          <th className=\"table-head\">carbs</th>\n          <th className=\"table-head\">protein</th>\n          <th className=\"table-head\">fat</th>\n          <th className=\"table-head\">calories</th>\n        </tr>\n        <tr className=\"table-row\">\n          <td className=\"table-data\">\n            {carbsGramGoal}\n            {' '}\n            <span> g</span>\n          </td>\n          <td className=\"table-data\">\n            {proteinGramGoal}\n            {' '}\n            <span> g</span>\n          </td>\n          <td className=\"table-data\">\n            {fatGramGoal}\n            {' '}\n            <span> g</span>\n          </td>\n          <td className=\"table-data\">\n            {calories}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default MealCalculatorResult;\n","import MealCalculator from './meal-calculator';\n\nexport default MealCalculator;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport NutrientRatio from './nutrient-ratio';\nimport MealCalculatorResult from './meal-calculator-result';\nimport { texts } from '../../../../data';\nimport './meal-calculator.css';\n\nconst MealCalculator = () => {\n  const userKcal = useSelector(({ userData: { userCalories } }) => userCalories);\n  const [calories, setCalories] = useState(userKcal);\n  const [proteinPercent, setProteinPercent] = useState('');\n  const [fatPercent, setFatPercent] = useState('');\n  const [carboPercent, setCarboPercent] = useState('');\n  const [userProteinPercent, setUserProteinPercent] = useState('');\n  const [userFatPercent, setUserFatPercent] = useState('');\n  const [userCarboPercent, setUserCarboPercent] = useState('');\n  const [ratioId, setRatioId] = useState('');\n  const [error, setError] = useState(null);\n  const [mealCalculatorResult, setMealCalculatorResult] = useState(false);\n  const [textBtn, setTextBtn] = useState('Hide Calculator');\n  const [viewCalculator, setViewCalculator] = useState(true);\n\n  const mealData = [calories, proteinPercent, fatPercent, carboPercent];\n\n  const onNutrientRatioChange = (protein, fat, carbohydrates) => {\n    setProteinPercent(protein);\n    setFatPercent(fat);\n    setCarboPercent(carbohydrates);\n  };\n\n  const totalUserRatio = () => {\n    const total = Number(userProteinPercent + userFatPercent + userCarboPercent).toFixed(1);\n    if (Number.isNaN(userProteinPercent)\n      || Number.isNaN(userFatPercent)\n      || Number.isNaN(userCarboPercent)) {\n      return setError(texts.errorMessage.empty);\n    }\n    if (total > 1) {\n      return setError(texts.errorMessage.greater);\n    }\n    if (total < 1) {\n      return setError(texts.errorMessage.less);\n    }\n    return (\n      setError(null),\n      onNutrientRatioChange(userProteinPercent, userFatPercent, userCarboPercent)\n    );\n  };\n\n  const setNutrientRatio = () => {\n    if (ratioId === 3) {\n      return totalUserRatio();\n    }\n    return null;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    for (let i = 0; i < mealData.length; i += 1) {\n      if (mealData[i] === null) {\n        return setMealCalculatorResult(false);\n      }\n    }\n    return setMealCalculatorResult(true);\n  };\n\n  const handleClick = () => {\n    setNutrientRatio();\n  };\n\n  const onCalorieGoalChange = (e) => {\n    const parseCalories = parseFloat(e.target.value);\n    return setCalories(parseCalories);\n  };\n\n  const onRatioIdChange = (id, prot, fat, carbs) => {\n    if (id === 3) {\n      return setRatioId(id);\n    }\n    return (\n      setRatioId(id),\n      onNutrientRatioChange(prot, fat, carbs));\n  };\n\n  const onProteinChange = (value) => {\n    setUserProteinPercent(value);\n  };\n\n  const onFatChange = (value) => {\n    setUserFatPercent(value);\n  };\n\n  const onCarboChange = (value) => {\n    setUserCarboPercent(value);\n  };\n\n  const changeTextBtn = (text) => ((text === 'Hide Calculator')\n    ? setTextBtn('Show Calculator') : setTextBtn('Hide Calculator'));\n\n  const changeViewCalc = () => ((viewCalculator)\n    ? setViewCalculator(false) : setViewCalculator(true));\n\n  const onViewCalculator = () => {\n    changeTextBtn(textBtn);\n    changeViewCalc();\n  };\n\n  return (\n    <div>\n      {viewCalculator\n        ? (\n          <form onSubmit={handleSubmit} className=\"meal-calc__form\">\n            <label htmlFor=\"calories-goal\" className=\"calories-goal\">\n              <span>{texts.caloriesGoal}</span>\n              <input\n                type=\"number\"\n                className=\"input\"\n                id=\"calories-goal\"\n                placeholder=\"2000 kcal/day\"\n                value={calories}\n                onChange={onCalorieGoalChange}\n                required\n              />\n            </label>\n            <div className=\"nutrient-ratio\">\n              <p className=\"nutrient-ratio__text\">\n                {texts.nutrientRatioText[0]}\n                {' '}\n                <span>{texts.nutrientRatioText[1]}</span>\n              </p>\n              <NutrientRatio\n                onRatioIdChange={onRatioIdChange}\n                onProteinChange={onProteinChange}\n                onFatChange={onFatChange}\n                onCarboChange={onCarboChange}\n                error={error}\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"button button-submit meal-plan__btn\"\n              onClick={handleClick}\n            >\n              Find Out Target Values\n            </button>\n          </form>\n        )\n        : null}\n      <button\n        type=\"button\"\n        className=\"button meal-plan__btn meal-plan__btn-view\"\n        onClick={onViewCalculator}\n      >\n        {textBtn}\n      </button>\n      {mealCalculatorResult\n        ? (\n          <MealCalculatorResult\n            calories={calories}\n            protein={proteinPercent}\n            fat={fatPercent}\n            carbo={carboPercent}\n          />\n        )\n        : null}\n    </div>\n  );\n};\n\nexport default MealCalculator;\n","import CurrentMealPlan from './current-meal-plan';\n\nexport default CurrentMealPlan;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { texts } from '../../../../../data';\nimport './current-meal-plan.css';\n\nconst CurrentMealPlan = () => {\n  const [currentValues, setCurrentValues] = useState({\n    carbs: 0,\n    protein: 0,\n    fat: 0,\n    kcal: 0,\n  });\n  const currentSum = useSelector(({ meals }) => meals.currentSum);\n  const {\n    carbs = 0, protein = 0, fat = 0, kcal = 0,\n  } = currentSum;\n\n  useEffect(() => {\n    setCurrentValues({\n      carbs, protein, fat, kcal,\n    });\n  }, [carbs, protein, fat, kcal]);\n\n  return (\n    <div className=\"current-meal-plan\">\n      <table className=\"table\">\n        <caption className=\"table-cap current-cap\">{texts.mealPlanner[0]}</caption>\n        <tbody className=\"table-body\">\n          <tr className=\"table-row\">\n            <th className=\"table-head\">carbs</th>\n            <th className=\"table-head\">protein</th>\n            <th className=\"table-head\">fat</th>\n            <th className=\"table-head\">calories</th>\n          </tr>\n          <tr className=\"table-row\">\n            <td className=\"table-data\">\n              {currentValues.carbs}\n              {' '}\n              <span> g</span>\n            </td>\n            <td className=\"table-data\">\n              {currentValues.protein}\n              {' '}\n              <span>g</span>\n            </td>\n            <td className=\"table-data\">\n              {currentValues.fat}\n              {' '}\n              <span> g</span>\n            </td>\n            <td className=\"table-data\">\n              {currentValues.kcal}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default CurrentMealPlan;\n","import React from 'react';\n\nconst {\n  Provider: NinjasServiceProvider,\n  Consumer: NinjasServiceConsumer,\n} = React.createContext();\n\nexport {\n  NinjasServiceProvider,\n  NinjasServiceConsumer,\n};\n","import withNinjasService from './with-ninjas-service';\n\nexport default withNinjasService;\n","import React from 'react';\nimport { NinjasServiceConsumer } from '../service-context';\n\nconst withNinjasService = (mapMethodsToProps) => (Wrapped) => (props) => (\n  <NinjasServiceConsumer>\n    {\n      (ninjasService) => {\n        const serviceProps = mapMethodsToProps(ninjasService);\n        return (\n          <Wrapped {...props} {...serviceProps} />\n        );\n      }\n    }\n  </NinjasServiceConsumer>\n);\n\nexport default withNinjasService;\n","import user from '../constants/user';\n\nconst calculateMetabolism = (gender, age, height, weight, activValue) => {\n  let basicMetabolism;\n  let ageValue;\n  let heightValue;\n  let weightValue;\n\n  if (gender === user.male.genderName) {\n    ageValue = user.male.ageFactor * parseFloat(age);\n    heightValue = user.male.heightFactor * parseFloat(height);\n    weightValue = user.male.weightFactor * parseFloat(weight);\n    basicMetabolism = user.male.basicMetabolismFactor + weightValue + heightValue - ageValue;\n  }\n\n  if (gender === user.female.genderName) {\n    ageValue = user.female.ageFactor * parseFloat(age);\n    heightValue = user.female.heightFactor * parseFloat(height);\n    weightValue = user.female.weightFactor * parseFloat(weight);\n    basicMetabolism = user.female.basicMetabolismFactor + weightValue + heightValue - ageValue;\n  }\n\n  return Math.round(basicMetabolism * parseFloat(activValue));\n};\n\nexport default calculateMetabolism;\n","const changeServingSize = (endSize, seekOut) => {\n  const servingSize = 100;\n  const result = Number((endSize * seekOut) / servingSize).toFixed(1);\n  return Number(result);\n};\n\nexport default changeServingSize;\n","import { water } from '../constants';\n\nconst getWaterGoalInML = (age, weight, factor) => {\n  const waterMin = Math.ceil(weight * water.min);\n  const waterMid = Math.ceil(weight * water.mid);\n  const waterMax = Math.ceil(weight * water.max);\n\n  if (age > water.significantAge) {\n    if (factor) {\n      return waterMid;\n    }\n    return waterMin;\n  }\n  if (factor) {\n    return waterMax;\n  }\n  return waterMid;\n};\n\nconst getWaterGoalInLiters = (age, weight, factor) => {\n  const ml = getWaterGoalInML(age, weight, factor);\n  const liters = (ml / water.literToML).toFixed(2);\n  return parseFloat(liters);\n};\n\nconst getGlassesOfWater = (age, weight, factor) => {\n  const ml = getWaterGoalInML(age, weight, factor);\n  const quantityOfGlasses = Math.floor(ml / water.oneGlassML);\n  if (ml % water.oneGlassML >= water.halfGlassML) {\n    return quantityOfGlasses + water.halfOfGlass;\n  }\n  return quantityOfGlasses;\n};\n\nexport {\n  getWaterGoalInML,\n  getWaterGoalInLiters,\n  getGlassesOfWater,\n};\n","const sumOfMealNutrients = (meals, key) => (\n  meals.map((meal) => meal\n    .reduce((a, b) => a + (b[key] || 0), 0))\n    .reduce((a, b) => a + b, 0)\n);\n\nexport default sumOfMealNutrients;\n","export default __webpack_public_path__ + \"static/media/add.bfd6f6ac.svg\";","export default __webpack_public_path__ + \"static/media/change.beb6e8c8.svg\";","export default __webpack_public_path__ + \"static/media/save.e6c2b3ec.svg\";","export default __webpack_public_path__ + \"static/media/garbage.46904d65.svg\";","export default __webpack_public_path__ + \"static/media/search.5db4160d.svg\";","export default __webpack_public_path__ + \"static/media/heart.cd5c00a3.svg\";","import SearchResult from './search-result';\n\nexport default SearchResult;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeServingSize } from '../../../../../../../models';\nimport { imgAdd } from '../../../../../../../images';\nimport './search-result.css';\nimport { calculateSumOfNutrients } from '../../../../../../../actions';\n\nconst SearchResult = ({\n  foodName, carbohydrates, proteins, fats, calories, servingSize, addFunction,\n}) => {\n  const [searchResult, setSearchResult] = useState({\n    carbs: 0,\n    protein: 0,\n    fat: 0,\n    kcal: 0,\n    portion: 0,\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setSearchResult({\n      carbs: carbohydrates,\n      protein: proteins,\n      fat: fats,\n      kcal: calories,\n      portion: servingSize,\n    });\n  }, [carbohydrates, proteins, fats, calories, servingSize]);\n\n  const onChangePortion = (e) => {\n    const endPortion = Number(e.target.value);\n    setSearchResult({\n      carbs: changeServingSize(endPortion, carbohydrates),\n      protein: changeServingSize(endPortion, proteins),\n      fat: changeServingSize(endPortion, fats),\n      kcal: changeServingSize(endPortion, calories),\n      portion: endPortion,\n    });\n  };\n\n  const {\n    carbs, protein, fat, kcal, portion,\n  } = searchResult;\n  const id = Math.floor(Math.random() * 115) + 2;\n  const addedProduct = {\n    id, foodName, carbs, protein, fat, kcal, portion,\n  };\n\n  const onClick = () => {\n    dispatch(addFunction(addedProduct));\n    dispatch(calculateSumOfNutrients());\n  };\n\n  return (\n    <table className=\"table\">\n      <tbody className=\"table-body\">\n        <tr className=\"table-row\">\n          <td className=\"data-info\">\n            <span className=\"name-value\">{foodName}</span>\n          </td>\n          <td className=\"data-info\">\n            <span className=\"name\">carb</span>\n            <span className=\"value\">{carbs}</span>\n          </td>\n          <td className=\"data-info\">\n            <span className=\"name\">prot</span>\n            <span className=\"value\">{protein}</span>\n          </td>\n          <td className=\"data-info\">\n            <span className=\"name\">fat</span>\n            <span className=\"value\">{fat}</span>\n          </td>\n          <td className=\"data-info\">\n            <span className=\"name\">kcal</span>\n            <span className=\"value\">{kcal}</span>\n          </td>\n          <td className=\"data-info\">\n            <span className=\"name\">size, g</span>\n            <span className=\"value\">\n              <input\n                type=\"number\"\n                value={portion}\n                onChange={(e) => onChangePortion(e)}\n              />\n            </span>\n          </td>\n          <td className=\"data-add\">\n            <button\n              type=\"button\"\n              className=\"add-btn\"\n              onClick={() => onClick()}\n            >\n              <img src={imgAdd} width=\"30px\" height=\"30px\" alt=\"Add\" />\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default SearchResult;\n","import Spinner from './spinner';\n\nexport default Spinner;\n","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => (\n  <div className=\"loader-container\">\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default Spinner;\n","import React, { useState } from 'react';\nimport withNinjasService from '../../../../../../hoc';\nimport SearchResult from '../search-result';\nimport Spinner from '../../../../../../spinner';\nimport { texts } from '../../../../../../../data';\nimport { imgSearch } from '../../../../../../../images';\nimport './search-panel.css';\n\nconst errorMessage = {\n  noSearch: <p className=\"error-message\">{texts.errorMessage.foodNoSearch}</p>,\n  noCorrectly: <p className=\"error-message\">{texts.errorMessage.foodNoCorrectly}</p>,\n};\n\nconst SearchPanel = ({ getFood, addFunction }) => {\n  const [productSearch, setProductSearch] = useState('');\n  const [food, setFood] = useState('');\n  const [kcal, setKcal] = useState(0);\n  const [proteins, setProteins] = useState(0);\n  const [fats, setFats] = useState(0);\n  const [carbs, setCarbs] = useState(0);\n  const [size, setSize] = useState(0);\n  const [view, setView] = useState(false);\n  const [noResult, setNoResult] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(errorMessage.noSearch);\n\n  const onFoodAdded = (item) => {\n    if (item === undefined) {\n      return (\n        setError(errorMessage.noSearch),\n        setNoResult(true)\n      );\n    }\n    const {\n      foodName, calories, servingSize, protein, fat, carbohydrates,\n    } = item;\n    return (\n      setFood(foodName),\n      setKcal(calories),\n      setProteins(protein),\n      setFats(fat),\n      setCarbs(carbohydrates),\n      setSize(servingSize),\n      setNoResult(false));\n  };\n\n  const addFood = () => {\n    getFood(food)\n      .then((item) => {\n        setError(null);\n        onFoodAdded(item[0]);\n        setLoading(false);\n      })\n      .catch(() => {\n        setError(errorMessage.noCorrectly);\n        setNoResult(true);\n        setLoading(false);\n      });\n  };\n\n  const handleChange = (e) => {\n    setView(false);\n    setProductSearch(e.target.value);\n  };\n\n  const onClick = () => {\n    setNoResult(false);\n    setLoading(true);\n    setFood(productSearch);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addFood();\n    setProductSearch('');\n    setView(true);\n  };\n\n  const loaded = (loading)\n    ? <Spinner />\n    : (\n      <SearchResult\n        foodName={food}\n        carbohydrates={carbs}\n        proteins={proteins}\n        fats={fats}\n        calories={kcal}\n        servingSize={size}\n        addFunction={addFunction}\n      />\n    );\n\n  const result = (noResult) ? (error) : (loaded);\n\n  return (\n    <div className=\"search-panel\">\n      <form className={(view) ? 'search-form' : 'search-form view'} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"input search-input\"\n          value={productSearch}\n          placeholder=\"write the product...\"\n          onChange={handleChange}\n        />\n        <button\n          type=\"submit\"\n          className=\"search-btn\"\n          onClick={onClick}\n        >\n          <img src={imgSearch} width=\"37px\" height=\"37px\" alt=\"Search\" />\n        </button>\n      </form>\n      {(view) ? result : null}\n    </div>\n  );\n};\n\nconst mapMethodsToProps = (service) => ({\n  getFood: service.getResultsOfSearch,\n});\n\nexport default withNinjasService(mapMethodsToProps)(SearchPanel);\n","import SearchPanel from './search-panel';\n\nexport default SearchPanel;\n","import React from 'react';\nimport { imgRemove } from '../../../../../../../images';\nimport './product-item.css';\n\nconst ProductItem = (props) => {\n  const {\n    id, foodName, carbs, protein, fat, kcal, portion, onClick,\n  } = props;\n  return (\n    <tr key={id} className=\"table-row\">\n      <td className=\"data-info\">\n        <span className=\"name-value\">{foodName}</span>\n      </td>\n      <td className=\"data-info\">\n        <span className=\"name\">carb</span>\n        <span className=\"value\">{carbs}</span>\n      </td>\n      <td className=\"data-info\">\n        <span className=\"name\">prot</span>\n        <span className=\"value\">{protein}</span>\n      </td>\n      <td className=\"data-info\">\n        <span className=\"name\">fat</span>\n        <span className=\"value\">{fat}</span>\n      </td>\n      <td className=\"data-info\">\n        <span className=\"name\">kcal</span>\n        <span className=\"value\">{kcal}</span>\n      </td>\n      <td className=\"data-info\">\n        <span className=\"name\">size, g</span>\n        <span className=\"value\">{portion}</span>\n      </td>\n      <td className=\"data-remove\">\n        <button\n          type=\"button\"\n          className=\"remove-btn\"\n          onClick={onClick}\n        >\n          <img src={imgRemove} width=\"25px\" height=\"25px\" alt=\"Remove\" />\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default ProductItem;\n","import MealsItem from './meals-item';\n\nexport default MealsItem;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { calculateSumOfNutrients } from '../../../../../../actions';\nimport SearchPanel from './search-panel';\nimport ProductItem from './product-item/product-item';\nimport { imgAdd, imgChange, imgSave } from '../../../../../../images';\nimport './meals-item.css';\n\nconst MealsItem = ({\n  name, products, addFunction, removeFunction,\n}) => {\n  const [viewList, setViewList] = useState(false);\n  const [viewSearchPanel, setViewSearchPanel] = useState(true);\n  const dispatch = useDispatch();\n\n  const product = products.map((prod) => {\n    const {\n      id, foodName, carbs, protein, fat, kcal, portion,\n    } = prod;\n    const productId = id;\n\n    const onClick = () => {\n      dispatch(removeFunction(productId));\n      dispatch(calculateSumOfNutrients());\n    };\n\n    return (\n      <ProductItem\n        key={id}\n        id={id}\n        foodName={foodName}\n        carbs={carbs}\n        protein={protein}\n        fat={fat}\n        kcal={kcal}\n        portion={portion}\n        onClick={() => onClick()}\n      />\n\n    );\n  });\n\n  const onClickSave = () => {\n    dispatch(calculateSumOfNutrients());\n    setViewSearchPanel(false);\n  };\n\n  const itemList = (\n    <>\n      <div className=\"meals__item-button\">\n        <button\n          type=\"button\"\n          className={(viewSearchPanel) ? 'btn btn-setting active' : 'btn btn-setting'}\n          onClick={() => setViewSearchPanel(true)}\n        >\n          <img src={imgChange} width=\"27px\" height=\"27px\" alt=\"Setting\" />\n        </button>\n        <button\n          type=\"button\"\n          className={(viewSearchPanel) ? 'btn btn-save' : 'btn btn-save active'}\n          onClick={() => onClickSave()}\n        >\n          <img src={imgSave} width=\"30px\" height=\"30px\" alt=\"Setting\" />\n        </button>\n      </div>\n      {(viewSearchPanel) ? <SearchPanel addFunction={addFunction} /> : null}\n      <table className=\"table\">\n        <tbody className=\"table-body\">\n          {product}\n        </tbody>\n      </table>\n    </>\n  );\n\n  const viewListMeal = () => ((viewList) ? setViewList(false) : setViewList(true));\n\n  return (\n    <div className=\"meal__item-container\">\n      <div className=\"meal__item-head\">\n        <button\n          type=\"button\"\n          className=\"view-btn\"\n          onClick={() => viewListMeal()}\n        >\n          <img\n            className={(viewList) ? 'rotate' : null}\n            src={imgAdd}\n            width=\"30px\"\n            alt=\"Add/Close button\"\n          />\n        </button>\n        <h3 className=\"meals__item-title\">{name}</h3>\n      </div>\n      {\n        (viewList) ? itemList : null\n      }\n    </div>\n  );\n};\n\nexport default MealsItem;\n","import MealsList from './meals-list';\n\nexport default MealsList;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  addProductToBreakfast,\n  addProductToDinner,\n  addProductToLunch,\n  addProductToSnacks,\n  removeProductFromBreakfast,\n  removeProductFromDinner,\n  removeProductFromLunch,\n  removeProductFromSnacks,\n} from '../../../../../actions';\nimport { texts } from '../../../../../data';\nimport MealsItem from './meals-item';\nimport './meals-list.css';\n\nconst MealsList = () => {\n  const productsBreakfast = useSelector((state) => state.meals.breakfast);\n  const productsLunch = useSelector((state) => state.meals.lunch);\n  const productsDinner = useSelector((state) => state.meals.dinner);\n  const productsSnacks = useSelector((state) => state.meals.snacks);\n  const key = [1, 2, 3, 4];\n  return (\n    <ul className=\"meals\">\n      <li key={key[0]} className=\"meals__item\">\n        <MealsItem\n          name={texts.mealsName.breakfast}\n          products={productsBreakfast}\n          addFunction={addProductToBreakfast}\n          removeFunction={removeProductFromBreakfast}\n        />\n      </li>\n      <li key={key[1]} className=\"meals__item\">\n        <MealsItem\n          name={texts.mealsName.lunch}\n          products={productsLunch}\n          addFunction={addProductToLunch}\n          removeFunction={removeProductFromLunch}\n        />\n      </li>\n      <li key={key[2]} className=\"meals__item\">\n        <MealsItem\n          name={texts.mealsName.dinner}\n          products={productsDinner}\n          addFunction={addProductToDinner}\n          removeFunction={removeProductFromDinner}\n        />\n      </li>\n      <li key={key[3]} className=\"meals__item\">\n        <MealsItem\n          name={texts.mealsName.snacks}\n          products={productsSnacks}\n          addFunction={addProductToSnacks}\n          removeFunction={removeProductFromSnacks}\n        />\n      </li>\n    </ul>\n  );\n};\nexport default MealsList;\n","import React from 'react';\nimport CurrentMealPlan from './current-meal-plan';\nimport texts from '../../../../data/texts';\nimport './daily-meal-planner.css';\nimport MealsList from './meals-list';\n\nconst DailyMealPlanner = () => (\n  <section className=\"daily-meal-planner\">\n    <CurrentMealPlan />\n    <h3 className=\"section-subtitle\">{texts.mealPlanner[1]}</h3>\n    <MealsList />\n  </section>\n);\n\nexport default DailyMealPlanner;\n","import MealPlan from './meal-plan';\n\nexport default MealPlan;\n","import React from 'react';\nimport './meal-plan.css';\n\nimport MealCalculator from './meal-calculator';\nimport texts from '../../../data/texts';\nimport DailyMealPlanner from './daily-meal-planner/daily-meal-planner';\n\nconst MealPlan = () => (\n  <section>\n    <h2 className=\"section-title visually-hidden\">Your Daily Meal Plan</h2>\n    <div className=\"section-container\">\n      <p className=\"section-text\">{texts.prefaceMealPlan[0]}</p>\n      <p className=\"section-text\">{texts.prefaceMealPlan[1]}</p>\n      <MealCalculator />\n      <DailyMealPlanner />\n    </div>\n  </section>\n);\n\nexport default MealPlan;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { scroller } from 'react-scroll';\nimport { connect } from 'react-redux';\nimport { getUserCalories } from '../../../../actions';\nimport './calculator-result.css';\nimport texts from '../../../../data/texts';\nimport MealPlan from '../../meal-plan';\n\nclass CalculatorResult extends Component {\n  componentDidMount() {\n    scroller.scrollTo('calculator-result', {\n      duration: 800,\n      delay: 0,\n      smooth: 'easeInOutQuart',\n    });\n  }\n\n  render() {\n    const {\n      onSelectedCalories, userSelectedCalories, maintainWeight,\n      normalWeightLoss, extremeWeightLoss, normalWeightGain, extremeWeightGain,\n    } = this.props;\n    const units = ' kcal/day';\n\n    return (\n      <div className=\"calculator-result\">\n        <div className=\"section-container\">\n          <h2 className=\"parameter-subtitle\">Results</h2>\n          <p className=\"calculator-result__result-msg\">\n            {texts.caloriesResult[0]}\n            <span className=\"calculator-result__result-value\">\n              {(!userSelectedCalories) ? 0 : userSelectedCalories}\n            </span>\n            <span className=\"calorie-units\">{units}</span>\n          </p>\n          <p className=\"calculator-result__help-msg\">\n            {texts.caloriesResult[1]}\n            <Link to=\"/meal-plan\" element={<MealPlan />}>{texts.caloriesResult[2]}</Link>\n          </p>\n          <ul className=\"calculator-result__list\">\n            <li className=\"calculator-result__item\">\n              <p>Maintain weight</p>\n              <button type=\"button\" className=\"calorie-value\" onClick={() => onSelectedCalories(maintainWeight)}>\n                {maintainWeight}\n                <span className=\"calorie-units\">{units}</span>\n              </button>\n            </li>\n            <li className=\"calculator-result__item\">\n              <p>Mild weight loss</p>\n              <button type=\"button\" className=\"calorie-value\" onClick={() => onSelectedCalories(normalWeightLoss)}>\n                {normalWeightLoss}\n                <span className=\"calorie-units\">{units}</span>\n              </button>\n            </li>\n            <li className=\"calculator-result__item\">\n              <p>Rapid weight loss</p>\n              <button type=\"button\" className=\"calorie-value\" onClick={() => onSelectedCalories(extremeWeightLoss)}>\n                {extremeWeightLoss}\n                <span className=\"calorie-units\">{units}</span>\n              </button>\n            </li>\n            <li className=\"calculator-result__item\">\n              <p>Safely weight gain</p>\n              <button type=\"button\" className=\"calorie-value\" onClick={() => onSelectedCalories(normalWeightGain)}>\n                {normalWeightGain}\n                <span className=\"calorie-units\">{units}</span>\n              </button>\n            </li>\n            <li className=\"calculator-result__item\">\n              <p>Fast weight gain</p>\n              <button type=\"button\" className=\"calorie-value\" onClick={() => onSelectedCalories(extremeWeightGain)}>\n                {extremeWeightGain}\n                <span className=\"calorie-units\">{units}</span>\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  userData: { userCalories }, weightTarget: {\n    maintainWeight, normalWeightLoss, extremeWeightLoss,\n    normalWeightGain, extremeWeightGain,\n  },\n}) => ({\n  userSelectedCalories: userCalories,\n  maintainWeight,\n  normalWeightLoss,\n  extremeWeightLoss,\n  normalWeightGain,\n  extremeWeightGain,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSelectedCalories: (value) => dispatch(getUserCalories(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalculatorResult);\n","import CalculatorResult from './calculator-result';\n\nexport default CalculatorResult;\n","import { actionType } from '../constants';\n\nconst getUserAge = (value) => ({\n  type: actionType.userAge,\n  payload: value,\n});\n\nconst getUserWeight = (value) => ({\n  type: actionType.userWeight,\n  payload: value,\n});\n\nconst getUserCalories = (value) => ({\n  type: actionType.userCalories,\n  payload: value,\n});\n\nexport {\n  getUserAge,\n  getUserWeight,\n  getUserCalories,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getUserWeight, getUserAge,\n  getExtremeWeightGain, getExtremeWeightLoss, getMaintainWeight,\n  getNormalWeightGain, getNormalWeightLoss, onClearCalorieCalculator,\n} from '../../../actions';\nimport Activity from './activity';\nimport Age from './age';\nimport Gender from './gender';\nimport Height from './height';\nimport Weight from './weight';\nimport CalculatorResult from './calculator-result';\n\nimport './calculator.css';\nimport activities from '../../../data/activities';\nimport {\n  calculateMetabolism, normalWeightLoss, extremeWeightLoss, normalWeightGain, extremeWeightGain,\n} from '../../../models';\n\nconst initialState = {\n  gender: '',\n  height: '',\n  activity: activities,\n  activityValue: '',\n};\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  onGenderChange = (event) => {\n    this.setState({\n      gender: event.target.value,\n    });\n  }\n\n  onHeightChange = (event) => {\n    this.setState({\n      height: parseFloat(event.target.value),\n    });\n  }\n\n  onActivityChange = (event) => {\n    this.setState({\n      activityValue: parseFloat(event.target.value),\n    });\n  }\n\n  onCalculatorResult = (event) => {\n    event.preventDefault();\n    const { gender, height, activityValue } = this.state;\n    const {\n      age, weight, forMaintainWeight, forNormalWeightLoss, forExtremeWeightLoss,\n      forNormalWeightGain, forExtremeWeightGain,\n    } = this.props;\n\n    const metabolism = calculateMetabolism(gender, age, height, weight, activityValue);\n    const normalLoss = normalWeightLoss(metabolism);\n    const extremeLoss = extremeWeightLoss(metabolism);\n    const normalGain = normalWeightGain(metabolism);\n    const extremeGain = extremeWeightGain(metabolism);\n\n    forMaintainWeight(metabolism);\n    forNormalWeightLoss(normalLoss);\n    forExtremeWeightLoss(extremeLoss);\n    forNormalWeightGain(normalGain);\n    forExtremeWeightGain(extremeGain);\n  }\n\n  onClearCalculator = () => {\n    const { onClearData } = this.props;\n    this.setState(initialState);\n    onClearData();\n  }\n\n  render() {\n    const {\n      gender, height, activity, activityValue,\n    } = this.state;\n    const {\n      age, weight, onAgeChange, onWeightChange, userSelectedCalories, maintainWeight,\n    } = this.props;\n\n    return (\n      <section>\n        <h2 className=\"section-title visually-hidden\">\n          Calorie Calculator\n        </h2>\n        <form className=\"section-container\" onSubmit={this.onCalculatorResult}>\n          <Gender\n            value={gender}\n            onGenderChange={this.onGenderChange}\n          />\n          <div className=\"parameter\">\n            <Age age={age} onChange={(e) => onAgeChange(parseFloat(e.target.value))} />\n            <Height value={height} onHeightChange={this.onHeightChange} />\n            <Weight weight={weight} onChange={(e) => onWeightChange(parseFloat(e.target.value))} />\n          </div>\n          <Activity\n            activities={activity}\n            activityValue={activityValue}\n            onActivityChange={this.onActivityChange}\n          />\n          <div className=\"calculator-button\">\n            <button\n              type=\"submit\"\n              className=\"button button-submit calculate-btn\"\n            // Решить с disabled\n            >\n              Calculate\n            </button>\n            <button\n              type=\"button\"\n              className=\"button button-clear\"\n              onClick={this.onClearCalculator}\n            // Решить с disabled\n            >\n              Clear fields and calculation\n            </button>\n          </div>\n        </form>\n        {\n          (maintainWeight || userSelectedCalories)\n            ? <CalculatorResult /> : null\n        }\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  userData: { userAge, userWeight, userCalories }, weightTarget: { maintainWeight },\n}) => ({\n  age: userAge,\n  weight: userWeight,\n  userSelectedCalories: userCalories,\n  maintainWeight,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClearData: () => dispatch(onClearCalorieCalculator()),\n  onAgeChange: (value) => dispatch(getUserAge(value)),\n  onWeightChange: (value) => dispatch(getUserWeight(value)),\n  forMaintainWeight: (value) => dispatch(getMaintainWeight(value)),\n  forNormalWeightLoss: (value) => dispatch(getNormalWeightLoss(value)),\n  forExtremeWeightLoss: (value) => dispatch(getExtremeWeightLoss(value)),\n  forNormalWeightGain: (value) => dispatch(getNormalWeightGain(value)),\n  forExtremeWeightGain: (value) => dispatch(getExtremeWeightGain(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Calculator);\n","import { user } from '../constants';\n\nconst normalWeightLoss = (weight) => Math.round(weight * user.targetCalories.forNormalWeightLoss);\nconst extremeWeightLoss = (weight) => Math.round(weight * user.targetCalories.forExtremeWeightLoss);\nconst normalWeightGain = (weight) => Math.round(weight * user.targetCalories.forNormalWeightGain);\nconst extremeWeightGain = (weight) => Math.round(weight * user.targetCalories.forExtremeWeightGain);\n\nexport {\n  normalWeightLoss,\n  extremeWeightLoss,\n  normalWeightGain,\n  extremeWeightGain,\n};\n","import Calculator from './calculator';\n\nexport default Calculator;\n","import { actionType } from '../constants';\nimport {\n  getMaintainWeight,\n  getNormalWeightLoss,\n  getExtremeWeightLoss,\n  getNormalWeightGain,\n  getExtremeWeightGain,\n} from './weight-target';\n\nimport {\n  getUserAge,\n  getUserWeight,\n  getUserCalories,\n} from './user-data';\n\nimport {\n  addProductToBreakfast,\n  addProductToLunch,\n  addProductToDinner,\n  addProductToSnacks,\n  removeProductFromBreakfast,\n  removeProductFromLunch,\n  removeProductFromDinner,\n  removeProductFromSnacks,\n  calculateSumOfNutrients,\n} from './meals';\n\nconst onClearCalorieCalculator = () => ({\n  type: actionType.clearCalorieCalculator,\n});\n\nexport {\n  onClearCalorieCalculator,\n  getUserAge,\n  getUserWeight,\n  getUserCalories,\n  getMaintainWeight,\n  getNormalWeightLoss,\n  getExtremeWeightLoss,\n  getNormalWeightGain,\n  getExtremeWeightGain,\n  addProductToBreakfast,\n  addProductToLunch,\n  addProductToDinner,\n  addProductToSnacks,\n  removeProductFromBreakfast,\n  removeProductFromLunch,\n  removeProductFromDinner,\n  removeProductFromSnacks,\n  calculateSumOfNutrients,\n};\n","import { actionType } from '../constants';\n\nconst getMaintainWeight = (value) => ({\n  type: actionType.maintainWeight,\n  payload: value,\n});\n\nconst getNormalWeightLoss = (value) => ({\n  type: actionType.normalWeightLoss,\n  payload: value,\n});\n\nconst getExtremeWeightLoss = (value) => ({\n  type: actionType.extremeWeightLoss,\n  payload: value,\n});\n\nconst getNormalWeightGain = (value) => ({\n  type: actionType.normalWeightGain,\n  payload: value,\n});\n\nconst getExtremeWeightGain = (value) => ({\n  type: actionType.extremeWeightGain,\n  payload: value,\n});\n\nexport {\n  getMaintainWeight,\n  getNormalWeightLoss,\n  getExtremeWeightLoss,\n  getNormalWeightGain,\n  getExtremeWeightGain,\n};\n","import WaterGoalResult from './water-goal-result';\n\nexport default WaterGoalResult;\n","import React, { useEffect } from 'react';\nimport { scroller } from 'react-scroll';\nimport { texts } from '../../../../data';\nimport './water-goal-result.css';\n\nconst WaterGoalResult = ({ waterML, waterLiters, glasses }) => {\n  useEffect(() => {\n    scroller.scrollTo('water-goal-result', {\n      duration: 800,\n      delay: 0,\n      smooth: 'easeInOutQuart',\n    });\n  }, [waterML]);\n\n  return (\n    <div className=\"water-goal-result\">\n      <h3 className=\"section-subtitle\">Your Daily Water Goal</h3>\n      <p className=\"water-goal-result__text\">\n        {texts.waterGoalResult[0]}\n        <span className=\"value\">{waterML}</span>\n        <span>{texts.waterGoalResult[1]}</span>\n      </p>\n      <ul className=\"water-goal-result__description\">\n        <li className=\"water-goal-result__description-item\">\n          <span className=\"value\">{waterLiters}</span>\n          <span>{texts.waterGoalResult[2]}</span>\n          <span className=\"unit\">{texts.waterGoalResult[3]}</span>\n        </li>\n        <li className=\"water-goal-result__description-item\">\n          <span className=\"value\">{glasses}</span>\n          <span>{texts.waterGoalResult[4]}</span>\n          <span className=\"unit\">{texts.waterGoalResult[5]}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default WaterGoalResult;\n","import WaterGoalCalculator from './water-goal-calculator';\n\nexport default WaterGoalCalculator;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport WaterGoalResult from '../water-goal-result';\nimport { getWaterGoalInML, getWaterGoalInLiters, getGlassesOfWater } from '../../../../models';\nimport { texts } from '../../../../data';\nimport './water-goal-calculator.css';\n\nconst WaterGoalCalculator = () => {\n  const [age, setAge] = useState(useSelector(({ userData: { userAge } }) => userAge));\n  const [weight, setWeight] = useState(useSelector(({ userData: { userWeight } }) => userWeight));\n  const [factor, setFactor] = useState(false);\n  const [result, setResult] = useState(false);\n  const [waterGoal, setWaterGoal] = useState(null);\n  const [litersOfWater, setLitersOfWater] = useState(null);\n  const [glassesOfWater, setGlassesofWater] = useState(null);\n  const [textBtn, setTextBtn] = useState('Hide Calculator');\n  const [viewCalculator, setViewCalculator] = useState(true);\n\n  const onFactorChange = () => (factor ? setFactor(false) : setFactor(true));\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setWaterGoal(getWaterGoalInML(age, weight, factor));\n    setLitersOfWater(getWaterGoalInLiters(age, weight, factor));\n    setGlassesofWater(getGlassesOfWater(age, weight, factor));\n    setResult(true);\n  };\n\n  const onClearCalculator = () => {\n    setAge(0);\n    setWeight(0);\n    setFactor(false);\n    setResult(false);\n    setWaterGoal(0);\n    setLitersOfWater(0);\n    setGlassesofWater(0);\n  };\n\n  const changeTextBtn = (text) => ((text === 'Hide Calculator')\n    ? setTextBtn('Show Calculator') : setTextBtn('Hide Calculator'));\n\n  const changeViewCalc = () => ((viewCalculator)\n    ? setViewCalculator(false) : setViewCalculator(true));\n\n  const onViewCalculator = () => {\n    changeTextBtn(textBtn);\n    changeViewCalc();\n  };\n\n  return (\n    <>\n      {viewCalculator\n        ? (\n          <form className=\"water-form\" onSubmit={onSubmit}>\n            <label htmlFor=\"age\" className=\"parameter__item\">\n              <h2 className=\"parameter-subtitle\">Age</h2>\n              <span>years</span>\n              <input\n                type=\"number\"\n                className=\"input\"\n                required\n                id=\"age\"\n                min={15}\n                max={100}\n                step={1}\n                value={age}\n                placeholder=\"0\"\n                onChange={(e) => setAge(parseFloat(e.target.value))}\n              />\n            </label>\n            <label htmlFor=\"weight\" className=\"parameter__item\">\n              <h2 className=\"parameter-subtitle\">Weight</h2>\n              <span>kg</span>\n              <input\n                type=\"number\"\n                className=\"input\"\n                required\n                id=\"weight\"\n                min={20}\n                max={500}\n                step={0.1}\n                value={weight}\n                placeholder=\"0\"\n                onChange={(e) => setWeight(parseFloat(e.target.value))}\n              />\n            </label>\n            <div className=\"parameter__item-checkbox\">\n              <p className=\"parameter__item-description\">{texts.waterGoal[0]}</p>\n              <p className=\"parameter__item-description\">{texts.waterGoal[1]}</p>\n              <input\n                type=\"checkbox\"\n                id=\"factor\"\n                className=\"checkbox-factor\"\n                checked={factor}\n                onClick={onFactorChange}\n              />\n              <label htmlFor=\"factor\" className=\"checkbox-factor__label\">\n                <span>{texts.waterGoal[2]}</span>\n              </label>\n            </div>\n            <div className=\"calculator-button\">\n              <button\n                type=\"submit\"\n                className=\"button button-submit calculate-btn\"\n              >\n                Calculate\n              </button>\n              <button\n                type=\"button\"\n                className=\"button button-clear\"\n                onClick={onClearCalculator}\n              >\n                Clear fields and calculation\n              </button>\n            </div>\n          </form>\n        )\n        : null}\n      <button\n        type=\"button\"\n        className=\"button meal-plan__btn meal-plan__btn-view\"\n        onClick={onViewCalculator}\n      >\n        {textBtn}\n      </button>\n      {\n        (result)\n          ? (\n            <WaterGoalResult\n              waterML={waterGoal}\n              waterLiters={litersOfWater}\n              glasses={glassesOfWater}\n            />\n          ) : null\n      }\n    </>\n  );\n};\n\nexport default WaterGoalCalculator;\n","import DailyWaterGoal from './daily-water-goal';\n\nexport default DailyWaterGoal;\n","import React from 'react';\nimport WaterGoalCalculator from './water-goal-calculator';\nimport './daily-water-goal.css';\nimport { texts } from '../../../data';\n\nconst DailyWaterGoal = () => (\n  <section>\n    <h2 className=\"section-title visually-hidden\">Your daily water goal</h2>\n    <div className=\"section-container\">\n      <p className=\"section-text\">{texts.prefaceWaterGoal[0]}</p>\n      <p className=\"section-text\">{texts.prefaceWaterGoal[1]}</p>\n      <WaterGoalCalculator />\n    </div>\n  </section>\n);\n\nexport default DailyWaterGoal;\n","import HomePage from './home-page';\n\nexport default HomePage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { texts } from '../../../data';\nimport { imgHeart } from '../../../images';\nimport './home-page.css';\n\nconst HomePage = () => (\n  <section className=\"home\">\n    <h2 className=\"section-title visually-hidden\">Welcome To Body Shape Control</h2>\n    <div className=\"section-container\">\n      <h3 className=\"section-subtitle\">Body Shape Control</h3>\n      <p className=\"section-content-text\">{texts.homePage.introduction}</p>\n      <p className=\"section-content-text\">\n        <Link to=\"/calorie-calculator\" data-title=\"Recommended to start with\">\n          {texts.homePage.calories.link}\n        </Link>\n        {texts.homePage.calories.text}\n      </p>\n      <p className=\"section-content-text\">\n        <Link to=\"/meal-plan\">\n          {texts.homePage.meals.link}\n        </Link>\n        {texts.homePage.meals.text}\n      </p>\n      <p className=\"section-content-text\">\n        {texts.homePage.water.text}\n        <Link to=\"/water-goal\">\n          {texts.homePage.water.link}\n        </Link>\n      </p>\n      <p className=\"section-content-text\">\n        {texts.homePage.conclusion}\n        <img src={imgHeart} width=\"50px\" height=\"50px\" alt=\"Heart\" />\n      </p>\n    </div>\n  </section>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Layout from '../layout';\nimport Calculator from '../pages/calorie-calculator';\nimport MealPlan from '../pages/meal-plan';\nimport DailyWaterGoal from '../pages/water-goal';\nimport HomePage from '../pages/home-page';\n\nimport './app.css';\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"calorie-calculator\" element={<Calculator />} />\n        <Route path=\"meal-plan\" element={<MealPlan />} />\n        <Route path=\"water-goal\" element={<DailyWaterGoal />} />\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n","import App from './app';\n\nexport default App;\n","import { actionType } from '../constants';\nimport { sumOfMealNutrients } from '../models';\n\nconst deleteProduct = (products, productId) => {\n  const productIndex = products.findIndex(({ id }) => id === productId);\n  const newList = [\n    ...products.slice(0, productIndex),\n    ...products.slice(productIndex + 1),\n  ];\n  return newList;\n};\n\nconst calculateSumOfNutrients = (state) => {\n  const meals = [state.breakfast, state.lunch, state.dinner, state.snacks];\n  const carbs = Math.round(sumOfMealNutrients(meals, 'carbs'));\n  const protein = Math.round(sumOfMealNutrients(meals, 'protein'));\n  const fat = Math.round(sumOfMealNutrients(meals, 'fat'));\n  const kcal = Math.round(sumOfMealNutrients(meals, 'kcal'));\n\n  return {\n    carbs, protein, fat, kcal,\n  };\n};\n\nconst updateMeals = (state, action) => {\n  if (state === undefined) {\n    return {\n      breakfast: [],\n      lunch: [],\n      dinner: [],\n      snacks: [],\n      currentSum: {},\n    };\n  }\n\n  switch (action.type) {\n    case actionType.productAddedToBreakfast:\n      return {\n        ...state.meals,\n        breakfast: [...state.meals.breakfast, action.newProduct],\n      };\n    case actionType.productAddedToLunch:\n      return {\n        ...state.meals,\n        lunch: [...state.meals.lunch, action.newProduct],\n      };\n    case actionType.productAddedToDinner:\n      return {\n        ...state.meals,\n        dinner: [...state.meals.dinner, action.newProduct],\n      };\n    case actionType.productAddedToSnacks:\n      return {\n        ...state.meals,\n        snacks: [...state.meals.snacks, action.newProduct],\n      };\n    case actionType.productRemovedFromBreakfast:\n      return {\n        ...state.meals,\n        breakfast: deleteProduct(state.meals.breakfast, action.productId),\n      };\n    case actionType.productRemovedFromLunch:\n      return {\n        ...state.meals,\n        lunch: deleteProduct(state.meals.lunch, action.productId),\n      };\n    case actionType.productRemovedFromDinner:\n      return {\n        ...state.meals,\n        dinner: deleteProduct(state.meals.dinner, action.productId),\n      };\n    case actionType.productRemovedFromSnacks:\n      return {\n        ...state.meals,\n        snacks: deleteProduct(state.meals.snacks, action.productId),\n      };\n    case actionType.usersCurrentSumOfNutrient:\n      return {\n        ...state.meals,\n        currentSum: calculateSumOfNutrients(state.meals),\n      };\n    default:\n      return state.meals;\n  }\n};\n\nexport default updateMeals;\n","import { actionType } from '../constants';\n\nconst updateUserData = (state, action) => {\n  if (state === undefined) {\n    return {\n      userAge: '',\n      userWeight: '',\n      userCalories: '',\n    };\n  }\n\n  switch (action.type) {\n    case actionType.userAge:\n      return {\n        ...state.userData,\n        userAge: action.payload,\n      };\n    case actionType.userWeight:\n      return {\n        ...state.userData,\n        userWeight: action.payload,\n      };\n    case actionType.userCalories:\n      return {\n        ...state.userData,\n        userCalories: action.payload,\n      };\n    default:\n      return state.userData;\n  }\n};\n\nexport default updateUserData;\n","import { actionType } from '../constants';\n\nconst updateWeightTarget = (state, action) => {\n  if (state === undefined) {\n    return {\n      maintainWeight: 0,\n      normalWeightLoss: 0,\n      extremeWeightLoss: 0,\n      normalWeightGain: 0,\n      extremelWeightGain: 0,\n    };\n  }\n\n  switch (action.type) {\n    case actionType.maintainWeight:\n      return {\n        ...state.weightTarget,\n        maintainWeight: action.payload,\n      };\n    case actionType.normalWeightLoss:\n      return {\n        ...state.weightTarget,\n        normalWeightLoss: action.payload,\n      };\n    case actionType.extremeWeightLoss:\n      return {\n        ...state.weightTarget,\n        extremeWeightLoss: action.payload,\n      };\n    case actionType.normalWeightGain:\n      return {\n        ...state.weightTarget,\n        normalWeightGain: action.payload,\n      };\n    case actionType.extremeWeightGain:\n      return {\n        ...state.weightTarget,\n        extremeWeightGain: action.payload,\n      };\n    default:\n      return state.weightTarget;\n  }\n};\n\nexport default updateWeightTarget;\n","import { actionType } from '../constants';\nimport updateMeals from './meals';\nimport updateUserData from './user-data';\nimport updateWeightTarget from './weight-target';\n\n// add find out target value result in Global state\n\nconst reducer = (state, action) => {\n  if (action.type === actionType.clearCalorieCalculator) {\n    return {\n      userData: updateUserData(undefined, action),\n      weightTarget: updateWeightTarget(undefined, action),\n      meals: updateMeals(state, action),\n    };\n  }\n  return {\n    userData: updateUserData(state, action),\n    weightTarget: updateWeightTarget(state, action),\n    meals: updateMeals(state, action),\n  };\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport ErrorBoundary from './components/error-boundary';\nimport './index.css';\nimport App from './components/app';\nimport NinjasService from './services/ninjas-service';\nimport { NinjasServiceProvider } from './components/service-context';\nimport store from './store';\n\nconst ninjasService = new NinjasService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <NinjasServiceProvider value={ninjasService}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </NinjasServiceProvider>\n    </ErrorBoundary>\n  </Provider>,\n  document.getElementById('root'),\n);\n","export default class NinjasService {\n  apiBase = 'https://api.api-ninjas.com/v1/nutrition?query=';\n\n  options = {\n    method: 'GET',\n    headers: {\n      'X-Api-Key': 'Q4mNprkESFMH4gJ7FOmZEA==KkKmfyHx82G0suVk',\n    },\n  };\n\n  onParsedString = (str) => {\n    const newString = str.toLowerCase().split(' ').join('%20');\n    return newString;\n  };\n\n  getResource = async (food) => {\n    const requestedFood = this.onParsedString(food);\n    const result = await fetch(`${this.apiBase}${requestedFood}`, this.options);\n\n    if (!result.ok) {\n      throw new Error(`Could not fetch ${this.apiBase}, received ${result.status}`);\n    }\n\n    const res = await result.json();\n\n    return res;\n  };\n\n  getResultsOfSearch = async (food) => {\n    const res = await this.getResource(food);\n    return res.map((item) => this.transformFood(item));\n  };\n\n  transformFood = (food) => {\n    const result = {\n      foodName: food.name,\n      calories: food.calories,\n      servingSize: food.serving_size_g,\n      protein: food.protein_g,\n      fat: food.fat_total_g,\n      carbohydrates: food.carbohydrates_total_g,\n    };\n    return result;\n  };\n}\n"],"sourceRoot":""}